@IEEEtranBSTCTL{IEEEexample:BSTcontrol,
	CTLdash_repeated_names= "no",
}
@misc{AskUbuntu2011,
	annote = {NULL},
	author = {AskUbuntu and Rmano},
	title = {{How to correctly create a virtual file system?}},
	url = {http://askubuntu.com/questions/87817/how-to-correctly-create-a-virtual-file-system},
	urldate = {2017-03-14},
	year = {2011}
}
@article{Bobroff2007,
	abstract = {A dynamic server migration and consolidation algorithm is introduced. The algorithm is shown to provide substantial improvement over static server consolidation in reducing the amount of required capacity and the rate of service level agreement violations. Benefits accrue for workloads that are variable and can be forecast over intervals shorter than the time scale of demand variability. The management algorithm reduces the amount of physical capacity required to support a specified rate of SLA violations for a given workload by as much as 50{\%} as compared to static consolidation approach. Another result is that the rate of SLA violations at fixed capacity may be reduced by up to 20{\%}. The results are based on hundreds of production workload traces across a variety of operating systems, applications, and industries.},
	author = {Bobroff, Norman and Kochut, Andrzej and Beaty, Kirk},
	doi = {10.1109/INM.2007.374776},
	isbn = {1424407990},
	issn = {1-4244-0798-2},
	journal = {10th IFIP/IEEE International Symposium on Integrated Network Management 2007, IM '07},
	pages = {119--128},
	pmid = {20210421},
	title = {{Dynamic placement of virtual machines for managing SLA violations}},
	volume = {5},
	year = {2007}
}
@misc{Cathey2017,
	abstract = {Stabilization cycle brings greater scalability and performance in one platform to integrate and manage virtual machines, bare metal and containers},
	author = {Cathey, Robert and Sell, Lauren},
	title = {{OpenStack{\textregistered} Ocata Strengthens Core Infrastructure Services and Container Integration with 15th Release of Cloud Computing Software}},
	url = {https://www.openstack.org/news/view/302/openstack-ocata-strengthens-core-infrastructure-services-and-container-integration-with-15th-release-of-cloud-computing-software},
	urldate = {2017-02-26},
	year = {2017}
}
@article{Chase2001,
	author = {Chase, J and Anderson, D and Thakur, P and Vahdat, A},
	isbn = {1581133898},
	journal = {Proceedings of SOSP},
	pages = {103--116},
	title = {{Managing Energy and Server Resources in Hosting Centers}},
	year = {2001}
}
@article{Clark2005,
	abstract = {Migrating operating system instances across distinct physical hosts is a useful tool for administrators of data centers and clusters: It allows a clean separation between hard-ware and software, and facilitates fault management, load balancing, and low-level system maintenance. By carrying out the majority of migration while OSes continue to run, we achieve impressive performance with minimal service downtimes; we demonstrate the migration of entire OS instances on a commodity cluster, recording service downtimes as low as 60ms. We show that that our performance is sufficient to make live migration a practical tool even for servers running interactive loads. In this paper we consider the design options for migrating OSes running services with liveness constraints, focusing on data center and cluster environments. We introduce and analyze the concept of writable working set, and present the design, implementation and evaluation of high-performance OS migration built on top of the Xen VMM.},
	archivePrefix = {arXiv},
	arxivId = {1601.03854},
	author = {Clark, Christopher and Fraser, Keir and Hand, Steven and Hansen, Jacob Gorm and Jul, Eric and Limpach, Christian and Pratt, Ian and Warfield, Andrew},
	doi = {10.1145/1251203.1251223},
	eprint = {1601.03854},
	isbn = {9781605583754},
	issn = {00371963},
	journal = {NSDI'05 Proceedings of the 2nd conference on Symposium on Networked Systems Design {\&} Implementation},
	number = {Vmm},
	pages = {273--286},
	title = {{Live migration of virtual machines}},
	url = {http://dl.acm.org/citation.cfm?id=1251203.1251223},
	year = {2005}
}
@misc{DevStack2017a,
	annote = {NULL},
	author = {DevStack},
	title = {{NeutronDevstack}},
	url = {https://wiki.openstack.org/wiki/NeutronDevstack},
	urldate = {2017-03-14},
	year = {2017}
}
@misc{DevStack2017,
	annote = {NULL},
	author = {DevStack},
	title = {{Multi-Node Lab}},
	url = {https://docs.openstack.org/developer/devstack/guides/multinode-lab.html},
	urldate = {2017-03-14},
	year = {2017}
}
@misc{Griffith2016,
	abstract = {The 'cloud' is a real buzzword, but what is it, how does it impact what you do, and is it anything really new?},
	author = {Griffith, Eric},
	title = {{What is Cloud Computing?}},
	url = {http://www.pcmag.com/article2/0,2817,2372163,00.asp},
	urldate = {2017-02-23},
	year = {2016}
}
@article{Guo2007,
	abstract = {Multi-tenancy technology is one of key competencies for network delivery services to achieve higher profit margin by leveraging the economic of scale. This paper explores the requirements and challenges of the native multi-tenancy pattern which have the potential of serving a large volume of clients simultaneously. We provide a framework with a set of multi-tenancy common services to help people design and implement a high quality native multi-tenant application more efficiently. Due to the essential requirement to guarantee service quality with high share efficiency, we present approaches and principles to support better isolations among tenants in many aspects such as security, performance, availability, administration etc. We have already achieved many hand on experiences by applying parts of the design and principles into a real multi-tenant application, and identified some future research points to better safeguard the quality of service for each tenant.},
	author = {Guo, Chang Jie and Sun, Wei and Huang, Ying and Wang, Zhi Hu and Gao, Bo},
	doi = {10.1109/CEC-EEE.2007.4},
	isbn = {0769529135},
	issn = {2378-1963},
	journal = {Technology and the 4th IEEE International Conference on Enterprise Computing, ECommerce and EServices},
	pages = {551----558},
	title = {{A Framework for Native Multi-Tenancy Application Development and Management}},
	url = {http://www.computer.org/portal/web/csdl/doi/10.1109/CEC-EEE.2007.4},
	year = {2007}
}
@article{Hochba1997,
	author = {Hochba, Dorit S},
	isbn = {0534949681},
	pages = {40--52},
	title = {{Approzimation Algorithms for NP-Hard Problems Introduction ( Abridged )}},
	year = {1997}
}
@article{Jennings2015,
	abstract = {Resource management in a cloud environment is a hard problem, due to: the scale of modern data centers; the heterogeneity of resource types and their inter- dependencies; the variability and unpredictability of the load; as well as the range of objectives of the different actors in a cloud ecosystem. Consequently, both academia and industry began significant research efforts in this area. In this paper, we survey the recent literature, covering 250+ publications, and highlighting key results.We out- line a conceptual framework for cloud resource management and use it to structure the state-of-the-art review. Based on our analysis, we identify five challenges for fu- ture investigation. These relate to: providing predictable performance for cloud-hosted applications; achieving global manageability for cloud systems; engineering scalable re- source management systems; understanding economic behavior and cloud pricing; and developing solutions for the mobile cloud paradigm.},
	annote = {Resource management functions:
	- Global scheduling of virtualized resources (monitoren en controleren van gevirtualiseerde en onderliggende fysieke resources)

	- Resource management needs to achieve an appropriate balance bteween reactivity (adjusting resource allocation in response to detected changes in demand) and proactivity (adjusting resource allocations in response to predicted demand, with predictions typically being based on historcal measurements). (Resource demand profiling).

	- Resource utilization estimation (benaderingen va de staat van de resources voor het leveren van de cloud hosted apps)

	- Resource pricing and profix maximization

	- Local scheduling of virtualized resources: hoe worden de resources verdeeld over de verschillende nodes

	- Application scaling and provisioning: ervoor zorgen dat er genoeg resources aanwezig zijn tijdens het deployen van een applicatie

	- Workload management: gaat men een workload van de gebruiker accepteren of niet?

	- Cloud management systems: rapportering},
	author = {Jennings, B and Stadler, R},
	journal = {Journal of Network and Systems Management},
	keywords = {cloud computing,resource allocation,resource management,survey,virtualization},
	number = {3},
	pages = {567--619},
	title = {{Resource management in clouds: survey and research challenges}},
	volume = {23},
	year = {2015}
}
@article{Novakovic2013,
	abstract = {We describe the design and implementation of Deep-Dive, a system for transparently identifying and managing performance interference between virtual machines (VMs) co-located on the same physical machine in Infrastructure-as-a-Service cloud environments. DeepDive successfully addresses several important challenges, including the lack of performance information from applications, and the large overhead of detailed interference analysis. We first show that it is possible to use easily-obtainable, low-level metrics to clearly discern when interference is occurring and what resource is causing it. Next, using realistic workloads, we show that DeepDive quickly learns about interference across co-located VMs. Finally, we show DeepDive's ability to deal efficiently with interference when it is detected, by using a low-overhead approach to identifying a VM placement that alleviates interference.},
	author = {Novakovic, D and Vasic, N and Novakovic, S},
	doi = {10.1145/2556583},
	isbn = {978-1-931971-01-0},
	issn = {07342071},
	journal = {Atc'13},
	pages = {219--230},
	title = {{Deepdive: Transparently identifying and managing performance interference in virtualized environments}},
	url = {http://infoscience.epfl.ch/record/183449},
	year = {2013}
}
@misc{OpenStack2017,
	author = {OpenStack},
	title = {{OpenStack}},
	url = {https://www.openstack.org/},
	urldate = {2017-02-23},
	year = {2017}
}
@misc{OpenStack2017b,
	annote = {NULL},
	author = {OpenStack},
	title = {{Rally}},
	url = {http://rally.readthedocs.io/en/latest/index.html},
	urldate = {2017-03-14},
	year = {2017}
}
@misc{OpenStack2017a,
	annote = {NULL},
	author = {OpenStack},
	title = {{DevStack}},
	url = {https://docs.openstack.org/developer/devstack/},
	urldate = {2017-03-14},
	year = {2017}
}
@article{Panigrahy2011,
	abstract = {Inspired by virtual machine placement problems, we study heuristics for the Vector Bin Packing problem, where we are required to pack {\$}n{\$} items represented by {\$}d{\$}-dimensional vectors, into as few bins of size {\$}1{\^{}}d{\$} each as possible. We systematically study variants of the First Fit Decreasing (FFD) algorithm that have been proposed for this problem. Inspired by bad instances for FFD-type algorithms, we propose new geometric heuristics that run nearly as fast as FFD for reasonable values of {\$}n{\$} and {\$}d{\$}. We report on empirical evaluations of the FFD-based, as well as the new heuristics on large families of distributions. We identify which FFD variants work best in most cases and show that our new heuristics usually outperform FFD-based heuristics and can sometimes reduce the number of bins used by up to ten percent. Further, in all cases where we were able to compute the optimal solution we found our new heuristics within few percent of optimal. We conclude that these new heuristics are an excellent alternative to FFD-based heuristics and are prime candidates to be used in practice.},
	author = {Panigrahy, Rina and Talwar, Kunal and Uyeda, Lincoln and Wieder, Udi},
	journal = {Research.Microsoft.Com},
	title = {{Heuristics for Vector Bin Packing}},
	url = {http://research.microsoft.com/pubs/147927/VBPackingESA11.pdf},
	year = {2011}
}
@article{Rao2011,
	author = {Rao, Jia and Bu, Xiangping and Wang, Kun and Xu, Cheng-Zhong},
	doi = {10.1145/2007116.2007157},
	isbn = {9781450302623},
	issn = {01635999},
	journal = {Sigmetrics'11},
	keywords = {autonomic com-,cloud management,reinforcement learning},
	number = {1},
	pages = {321},
	title = {{Self-Adaptive Provisioning of Virtualized Resources in Cloud Computing}},
	volume = {39},
	year = {2011}
}
@article{Sharma2011,
	abstract = {In this paper we present Kingfisher, a {\{}$\backslash$em cost-aware{\}} system that provides efficient support for elasticity in the cloud by (i) leveraging multiple mechanisms to reduce the time to transition to new configurations, and (ii) optimizing the selection of a virtual server configuration that minimizes the cost. We have implemented a prototype of Kingfisher and have evaluated its efficacy on a laboratory cloud platform. Our experiments with varying application workloads demonstrate that Kingfisher is able to (i) decrease the cost of virtual server resources by as much as {\$}24\backslash{\&}{\#}x025;{\$} compared to the current cost-unaware approach, (ii) reduce by an order of magnitude the time to transition to a new configuration through multiple elasticity mechanisms in the cloud, and (iii), illustrate the opportunity for design alternatives which trade-off the cost of server resources with the time required to scale the application.},
	author = {Sharma, Upendra and Shenoy, Prashant and Sahu, Sambit and Shaikh, Anees},
	doi = {10.1109/ICDCS.2011.59},
	isbn = {9780769543642},
	issn = {1063-6927},
	journal = {Proceedings - International Conference on Distributed Computing Systems},
	pages = {559--570},
	title = {{A cost-aware elasticity provisioning system for the cloud}},
	year = {2011}
}
@incollection{Simoens2016,
	author = {Simoens, Pieter},
	booktitle = {Systeemontwerp},
	chapter = {Cloud Comp},
	pages = {367 -- 489},
	title = {{Cloud Computing}},
	year = {2016}
}
@article{Vaquero2011,
	abstract = {Scalability is said to be one of the major advantages brought by the cloud paradigm and, more specifically, the one that makes it different to an "advanced outsourcing" solution. However, there are some important pending issues before making the dreamed automated scaling for applications come true. In this paper, the most notable initiatives towards whole application scalability in cloud environments are presented. We present relevant efforts at the edge of state of the art technology, providing an encompassing overview of the trends they each follow. We also highlight pending challenges that will likely be addressed in new research efforts and present an ideal scalable cloud system.},
	author = {Vaquero, Luis M. and Rodero-Merino, Luis and Buyya, Rajkumar},
	doi = {10.1145/1925861.1925869},
	isbn = {0146-4833},
	issn = {01464833},
	journal = {ACM SIGCOMM Computer Communication Review},
	keywords = {cloud computing,scalability},
	number = {1},
	pages = {45--52},
	title = {{Dynamically scaling applications in the cloud}},
	volume = {41},
	year = {2011}
}
@article{Wilcox2011,
	abstract = {We formally define multi-capacity bin packing, a generalization of conventional bin packing, and develop an algorithm called Reordering Grouping Genetic Algorithm (RGGA) to assign VMs to servers. We first test RGGA on conventional bin packing problems and show that it yields excellent results but much more efficiently. We then generate a multi-constraint test set, and demonstrate the effectiveness of RGGA in this context. Lastly, we show the applicability of RGGA in its desired context by using it to develop an assignment of real virtual machines to servers.},
	author = {Wilcox, David and McNabb, Andrew and Seppi, Kevin},
	doi = {10.1109/CEC.2011.5949641},
	isbn = {9781424478347},
	journal = {2011 IEEE Congress of Evolutionary Computation, CEC 2011},
	keywords = {Bin Packing,Genetic Algorithm,Virtualization},
	pages = {362--369},
	title = {{Solving virtual machine packing with a Reordering Grouping Genetic Algorithm}},
	year = {2011}
}
@misc{Wired2017,
	author = {Wired},
	title = {{Service Level Agreements in the Cloud: Who cares?}},
	url = {https://www.wired.com/insights/2011/12/service-level-agreements-in-the-cloud-who-cares/},
	urldate = {2017-02-23},
	year = {2017}
}
@article{Wuhib2012,
	abstract = {—We report on design, implementation and evaluation of a resource management system that builds upon OpenStack, an open-source cloud platform for private and public clouds that is rapidly gaining acceptance in industry. Our implementation supports an Infrastructure-as-a-Service (IaaS) cloud and cur-rently provides allocation for computational resources in support of interactive as well as computationally intensive applications. The design supports an extensible set of management objectives between which the system can switch at runtime. We demonstrate through examples how management objectives related to load-balancing, energy efficiency and service differentiation can be mapped onto the controllers of the resource allocation subsystem, which attempts to achieve an activated management objective at all times. The design is extensible in the sense that addi-tional objectives can be introduced by providing instantiations for generic functions in the controllers. Our implementation monitors the fulfillment of the relevant management metrics in real time. Testbed evaluation demonstrates the effectiveness of our approach in a dynamic environment. It further illustrates the trade-off between closely meeting a specific management objective and the associated cost of VM live-migration. Index Terms—Cloud management, performance management, management objective, dynamic resource management, Open-Stack I. INTRODUCTION The paper reports on design, implementation and evalua-tion of a resource management system that builds upon the OpenStack cloud platform. The focus is on managing an Infrastructure-as-a-Service (IaaS) cloud, which makes ICT infrastructure available to customers in a virtualized way, including computation in form of virtual machines (VMs), storage in form of virtual disks, for instance, and networking in form of virtual switches, for example. IaaS cloud services are offered by an increasing number of providers, whereby Amazon and RackSpace are probably the most well-known. IaaS cloud environments have proved suitable for running interactive applications, such as websites and social networks, analytics frameworks like MapReduce or media streaming services, such as audio or video on-demand services. The IaaS service model has two principal stakeholders: the IaaS provider who owns and operates the cloud infrastructure and the customers who run their applications on the cloud. (If an IaaS customer, runs a web site, for instance, it has its own customer base that consumes cloud resources through the site.) Customers typically have service level agreements},
	annote = {OpenStack is een open-source cloud computing besturingssysteem voor het beheren en onderhouden van clouds. Het OpenStack project is gestart in 2010 door Rackspace en NASA die verantwoordelijk zijn voor de eerste stukken code. Ondertussen is OpenStack al uitgegroeid tot een ruime community met ondersteuning van meer dan 150 bedrijven.},
	author = {Wuhib, Fetahi and Stadler, Rolf and Lindgren, Hans},
	isbn = {9783901882487},
	issn = {2165-9605},
	journal = {Proceedings of the 2012 8th International Conference on Network and Service Management (CNSM '12) and the 2012 workshop on systems virtualiztion management (SVM '12)},
	keywords = {amic resource allocation with,cloud,fetahi wuhib,implementation for an openstack,lindgren,management objectives,rolf stadler and hans},
	pages = {309--315},
	title = {{Dynamic resource allocation with management objectives: Implementation for an OpenStack cloud}},
	volume = {1},
	year = {2012}
}
@article{Xu2011,
	abstract = {Virtual machine migration represents a new challenge to design efficient and practical migration algorithms that work well with hundreds or even thousands of VMs and servers. In our previous work, we advocated the use of a general stable matching framework from economics to solve networking problems, and showed that it offers unique advantages compared to utility-based optimization, using a simple procedure of deferred acceptance. In this paper, we apply this framework to the VM migration problem, and propose an egalitarian approach that finds a stable matching fair to both VMs and servers, instead of favoring either side as a result of the deferred acceptance procedure. Such an egalitarian stable matching that minimizes the total rank sum of the outcome is shown to be a sensible notion of fairness under mild conditions, and through simulations is demonstrated to offer superior results.},
	author = {Xu, Hong and Li, Baochun},
	doi = {10.1109/INFCOMW.2011.5928889},
	isbn = {9781457702488},
	journal = {2011 IEEE Conference on Computer Communications Workshops, INFOCOM WKSHPS 2011},
	pages = {631--636},
	title = {{Egalitarian stable matching for VM migration in cloud computing}},
	year = {2011}
}
@article{Xu2008,
	abstract = {Data centers, as resource providers, are expected to deliver on performance guarantees while optimizing resource utilization to reduce cost. Virtualization techniques provide the opportunity of consolidating multiple separately managed containers of virtual resources on underutilized physical servers. A key challenge that comes with virtualization is the simultaneous on-demand provisioning of shared physical resources to virtual containers and the management of their capacities to meet service-quality targets at the least cost. This paper proposes a two-level resource management system to dynamically allocate resources to individual virtual containers. It uses local controllers at the virtual-container level and a global controller at the resource-pool level. An important advantage of this two-level control architecture is that it allows independent controller designs for separately optimizing the performance of applications and the use of resources. Autonomic resource allocation is realized through the interaction of the local and global controllers. A novelty of the local controller designs is their use of fuzzy logic-based approaches to efficiently and robustly deal with the complexity and uncertainties of dynamically changing workloads and resource usage. The global controller determines the resource allocation based on a proposed profit model, with the goal of maximizing the total profit of the data center. Experimental results obtained through a prototype implementation demonstrate that, for the scenarios under consideration, the proposed resource management system can significantly reduce resource consumption while still achieving application performance targets. {\textcopyright} Springer Science+Business Media, LLC 2008.},
	author = {Xu, Jing and Zhao, Ming and Fortes, Jos{\'{e}} and Carpenter, Robert and Yousif, Mazin},
	doi = {10.1007/s10586-008-0060-0},
	isbn = {1386-7857},
	issn = {13867857},
	journal = {Cluster Computing},
	keywords = {Autonomic computing,Data centers,Fuzzy modeling,Resource management,Two-level control,Virtualization},
	number = {3},
	pages = {213--227},
	title = {{Autonomic resource management in virtualized data centers using fuzzy logic-based approaches}},
	volume = {11},
	year = {2008}
}
@article{Yousafzai2016,
	annote = {Zoals te zien in figuur ... beschrijft het cloud resource allocation mechanisme de beslissing in hoeveel, welke, waar en wanneer de beschikbare resources moeten toegekend worden aan de cloud users.},
	author = {Yousafzai, Abdullah and Gani, Abdullah and Noor, Rafidah Md and Sookhak, Mehdi and Talebian, Hamid and Shiraz, Muhammad and Khan, Muhammad Khurram},
	doi = {10.1007/s10115-016-0951-y},
	issn = {02193116},
	journal = {Knowledge and Information Systems},
	keywords = {Cloud computing,Resource allocation,Resource pricing,Resource utilization},
	number = {2},
	pages = {1--35},
	publisher = {Springer London},
	title = {{Cloud resource allocation schemes: review, taxonomy, and opportunities}},
	volume = {50},
	year = {2016}
}
@article{Al-haj2013,
	annote = {NULL},
	author = {Al-haj, Saeed and Al-shaer, Ehab},
	isbn = {9783901882531},
	journal = {Cnsm 2013},
	pages = {51--58},
	title = {{A Formal Approach for Virtual Machine Migration Planning}},
	year = {2013}
}
@article{Alicherry2012,
	abstract = {We consider resource allocation algorithms for distributed cloud systems, which deploy cloud-computing resources that are geographically distributed over a large number of locations in a wide-area network. This distribution of cloud-computing resources over many locations in the network may be done for several reasons, such as to locate resources closer to users, to reduce bandwidth costs, to increase availability, etc. To get the maximum benefit from a distributed cloud system, we need efficient algorithms for resource allocation which minimize communication costs and latency. In this paper, we develop efficient resource allocation algorithms for use in distributed clouds. Our contributions are as follows: Assuming that users specify their resource needs, such as the number of virtual machines needed for a large computational task, we develop an efficient 2-approximation algorithm for the optimal selection of data centers in the distributed cloud. Our objective is to minimize the maximum distance, or latency, between the selected data centers. Next, we consider use of a similar algorithm to select, within each data center, the racks and servers where the requested virtual machines for the task will be located. Since the network inside a data center is structured and typically a tree, we make use of this structure to develop an optimal algorithm for rack and server selection. Finally, we develop a heuristic for partitioning the requested resources for the task amongst the chosen data centers and racks. We use simulations to evaluate the performance of our algorithms over example distributed cloud systems and find that our algorithms provide significant gains over other simpler allocation algorithms.},
	author = {Alicherry, Mansoor and Lakshman, T. V.},
	doi = {10.1109/INFCOM.2012.6195847},
	isbn = {9781467307758},
	issn = {0743166X},
	journal = {Proceedings - IEEE INFOCOM},
	pages = {963--971},
	title = {{Network aware resource allocation in distributed clouds}},
	year = {2012}
}
@article{Aral2015,
	abstract = {Federated clouds and cloud brokering allow migration of virtual machines across clouds and even deployment of cooperating VMs in different cloud data centers. In order to fully benefit from these new opportunities, we propose a heuristic that outputs a matching between virtual machine and cloud data centers by taking resource capacities, VM topologies, performance and resource costs into account. Results of our initial evaluation using the CloudSim Framework indicate that, proposed heuristic is promising for a better optimized placement of networked VM groups onto the federated cloud topology.},
	author = {Aral, Atakan and Ovatman, Tolga},
	doi = {10.1109/CLOUD.2015.145},
	isbn = {9781467372879},
	journal = {Proceedings - 2015 IEEE 8th International Conference on Cloud Computing, CLOUD 2015},
	keywords = {Federated clouds,Resource allocation,Resource mapping,Subgraph matching,Virtual machine placement},
	pages = {1033--1036},
	title = {{Subgraph Matching for Resource Allocation in the Federated Cloud Environment}},
	year = {2015}
}
@article{Bi2015,
	abstract = {The balance between customer-perceived application performance and cloud provider's profit is a key to achieve win-win in cloud economy. Current researches on cloud resource allocation do not sufficiently address the issue of minimizing energy cost and maximizing revenue for various applications in virtualized cloud data center (VCDC). This paper presents a new approach to realize the optimization of VCDC's profit based on the service-level agreements between cloud providers and customers. A precise model of the external and internal request arrival rates is proposed for virtual machines of different service classes. An analytic probabilistic model is then developed for non-equilibrium VCDC states. Next, a smart controller is proposed for fine-grained resource provisioning and sharing among multiple applications. A novel hybrid meta-heuristic algorithm based on simulated annealing and particle swarm optimization is developed to solve the formulated profit maximization problem. The proposed algorithm can guarantee that differentiated service qualities can be provided with higher overall performance and lower energy cost. Finally, the effectiveness of the proposed approach is validated with trace-driven simulation. {\textcopyright} 2015 IEEE.},
	author = {Bi, Jing and Yuan, Haitao and Fan, Yushun and Tan, Wei and Zhang, Jia},
	doi = {10.1109/CLOUD.2015.64},
	isbn = {9781467372879},
	issn = {15455955},
	journal = {Proceedings - 2015 IEEE 8th International Conference on Cloud Computing, CLOUD 2015},
	keywords = {Data center,Dynamic resource provisioning,Heuristic algorithm,Optimization},
	pages = {429--436},
	title = {{Dynamic Fine-Grained Resource Provisioning for Heterogeneous Applications in Virtualized Cloud Data Center}},
	year = {2015}
}
@article{Biran2012,
	abstract = {Virtual Machine (VM) placement has to carefully consider the aggregated resource consumption of co-located VMs in order to obey service level agreements at lower possible cost. In this paper, we focus on satisfying the traffic demands of the VMs in addition to CPU and memory requirements. This is a much more complex problem both due to its quadratic nature (being the communication between a pair of VMs) and since it involves many factors beyond the physical host, like the network topologies and the routing scheme. Moreover, traffic patterns may vary over time and predicting the resulting effect on the actual available bandwidth between hosts within the data center is extremely difficult. We address this problem by trying to allocate a placement that not only satisfies the predicted communication demand but is also resilient to demand time-variations. This gives rise to a new optimization problem that we call the Min Cut Ratio-aware VM Placement (MCRVMP). The general MCRVMP problem is NP-Hard, hence, we introduce several heuristics to solve it in reasonable time. We present extensive experimental results, associated with both placement computation and run-time performance under time-varying traffic demands, to show that our heuristics provide good results (compared to the optimal solution) for medium size data centers.},
	author = {Biran, Ofer and Corradi, Antonio and Fanelli, Mario and Foschini, Luca and Nus, Alexander and Raz, Danny and Silvera, Ezra},
	doi = {10.1109/CCGrid.2012.119},
	isbn = {9780769546919},
	journal = {Proceedings - 12th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing, CCGrid 2012},
	keywords = {Cloud Computing,Data Center Networking,Min Cut Ratio,Network-Aware VM Placement},
	pages = {498--506},
	pmid = {6217459},
	title = {{A stable network-aware VM placement for cloud systems}},
	year = {2012}
}
@article{Breitgand2012,
	abstract = {Current trends in virtualization, green computing, and cloud computing require ever increasing efficiency in consolidating virtual machines without degrading quality of service. In this work, we consider consolidating virtual machines on the minimum number of physical containers (e.g., hosts or racks) in a cloud where the physical network (e.g., network interface or top of the rack switch link) may become a bottleneck. Since virtual machines do not simultaneously use maximum of their nominal bandwidth, the capacity of the physical container can be multiplexed. We assume that each virtual machine has a probabilistic guarantee on realizing its bandwidth Requirements-as derived from its Service Level Agreement with the cloud provider. Therefore, the problem of consolidating virtual machines on the minimum number of physical containers, while preserving these bandwidth allocation guarantees, can be modeled as a Stochastic Bin Packing (SBP) problem, where each virtual machine's bandwidth demand is treated as a random variable. We consider both offline and online versions of SBP. Under the assumption that the virtual machines' bandwidth consumption obeys normal distribution, we show a 2-approximation algorithm for the offline version and improve the previously reported results by presenting a (2 +∈)-competitive algorithm for the online version. We also observe that a dual polynomial-time approximation scheme (PTAS) for SBP can be obtained via reduction to the two-dimensional vector bin packing problem. Finally, we perform a thorough performance evaluation study using both synthetic and real data to evaluate the behavior of our proposed algorithms, showing their practical applicability.},
	author = {Breitgand, David and Epstein, Amir},
	doi = {10.1109/INFCOM.2012.6195716},
	isbn = {9781467307758},
	issn = {0743166X},
	journal = {Proceedings - IEEE INFOCOM},
	pages = {2861--2865},
	title = {{Improving consolidation of virtual machines with risk-aware bandwidth oversubscription in compute clouds}},
	year = {2012}
}
@article{Fakhfakh2015,
	abstract = {Workflow technologies have become an efficient mean for the development of different applications. One well known challenge for executing workflows on cloud computing is the resources provisioning. The latter consists in making an appropriate decision when mapping tasks to resources considering multiple objectives that are often contradictory. The problem of resources provisioning for workflow applications in the cloud has been widely studied in the literature. However, the existing works didn't consider the change in workflow instances at runtime. This functionality has become a major requirement to deal with unusual situations and evolutions. In this paper, we present a first step towards the resources provisioning for a dynamic workflow in the cloud. In fact, we propose a provisioning algorithm which takes into account some constraints. After that, we extend it in order to support the dynamic changes of workflow. Our algorithm is evaluated using CloudSim simulator. The different experiments that we present show the efficiency of our approach in terms of financial execution cost and overhead.},
	author = {Fakhfakh, Fairouz and Kacem, Hatem Hadj and Kacem, Ahmed Hadj},
	doi = {10.1109/CLOUD.2015.69},
	isbn = {9781467372879},
	journal = {Proceedings - 2015 IEEE 8th International Conference on Cloud Computing, CLOUD 2015},
	keywords = {Cloud computing,Dynamic workflow,Resources provisioning},
	pages = {469--476},
	title = {{A Provisioning Approach of Cloud Resources for Dynamic Workflows}},
	year = {2015}
}
@article{Feller2012,
	abstract = {With the advent of cloud computing and the need to satisfy growing customers resource demands, cloud providers now operate increasing amounts of large data centers. In order to ease the creation of private clouds, several open-source Infrastructure-as-a-Service (IaaS) cloud management frame- works (e.g. OpenNebula, Nimbus, Eucalyptus, OpenStack) have been proposed. However, all these systems are either highly centralized or have limited fault tolerance support. Consequently, they all share common drawbacks: scalability is limited by a single master node and Single Point of Failure (SPOF). In this paper, we present the design, implementation and evaluation of a novel scalable and autonomic (i.e. self-organizing and healing) virtual machine (VM) management framework called Snooze. For scalability the system utilizes a self-organizing hierarchical architecture and performs distributed VM man- agement. Moreover, fault tolerance is provided at all levels of the hierarchy, thus allowing the system to self-heal in case of failures. Our evaluation conducted on 144 physical machines of the Grid'5000 experimental testbed shows that the fault tolerance features of the framework do not impact application performance. Moreover, negligible cost is involved in performing distributed VM management and the system remains highly scalable with increasing amounts of resources.},
	author = {Feller, Eugen and Rilling, Louis and Morin, Christine},
	doi = {10.1109/CCGrid.2012.71},
	isbn = {9780769546919},
	journal = {Proceedings - 12th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing, CCGrid 2012},
	keywords = {Cloud Computing,Scalability,Self-Healing,Self-Organization,Virtualization},
	pages = {482--489},
	title = {{Snooze: A scalable and autonomic virtual machine management framework for private clouds}},
	year = {2012}
}
@article{Ghorbani2012,
	abstract = {Keywords},
	author = {Ghorbani, Soudeh and Caesar, Matthew},
	doi = {10.1145/2342441.2342455},
	isbn = {9781450314770},
	journal = {ACM SIGCOMM workshop on Hot topics in software defined networks},
	keywords = {consistency,migration,network updates,software defined},
	pages = {67--72},
	title = {{Walk the line: consistent network updates with bandwidth guarantees}},
	url = {http://dl.acm.org/citation.cfm?id=2342455},
	year = {2012}
}
@article{Giurgiu2012,
	abstract = {Middleware 2012},
	author = {Giurgiu, Ioana and Castillo, Claris and Tantawi, Asser and Steinder, Malgorzata},
	doi = {10.1007/978-3-642-35170-9_17},
	isbn = {978-3-642-35169-3},
	issn = {03029743},
	journal = {Proceeding Middleware '12 Proceedings of the 13th International Middleware Conference},
	keywords = {cloud,network-aware virtual machine placement,perfor-},
	pages = {332--353},
	title = {{Enabling efficient placement of virtual infrastructures in the cloud}},
	year = {2012}
}
@article{Guo2012,
	abstract = {Enterprises with existing IT infrastructure are beginning to employ a hybrid cloud model where the enterprise uses its own private resources for the majority of its comput- ing, but then “bursts” into the cloud when local resources are insufficient. However, current approaches to cloud bursting cannot be effectively automated because they heavily rely on system administrator knowledge to make decisions. In this paper we describe Seagull, a system de- signed to facilitate cloud bursting by determining which applications can be transitioned into the cloud most eco- nomically, and automating the movement process at the proper time. We further optimize the deployment of ap- plications into the cloud using an intelligent precopying mechanism that proactively replicates virtualized appli- cations, lowering the bursting time from hours to min- utes. Our evaluation illustrates how our prototype can reduce cloud costs by more than 45{\%} when bursting to the cloud, and the incremental cost added by precopying applications is offset by a burst time reduction of nearly 95{\%}.},
	author = {Guo, Tian and Sharma, Upendra and Wood, Timothy and Sahu, Sambit and Shenoy, Prashant},
	isbn = {978-931971-93-5},
	journal = {Proceedings of the 2012 USENIX conference on Annual Technical Conference (USENIX ATC '12)},
	pages = {361--366},
	title = {{Seagull: Intelligent Cloud Bursting for Enterprise Applications}},
	year = {2012}
}
@article{Hu2012,
	abstract = {Traditional Infrastructure-as-a-Service offerings provide customers with large numbers of fixed-size virtual machine (VM) instances with resource allocations that are designed to meet application demands. With application demands varying over time, cloud providers gain efficiencies through resource consolidation and over-commitment. For cloud customers, however, this leads to inefficient use of the cloud resources they have purchased. To address cloud customers' dynamic application requirements, we present a new cloud resource offering, called v-Bundle, which makes flexible the exchange of resource capacity among multiple VM instances belonging to the same customer. Specifically targeting network resources, for each customer application, we first use DHT-based techniques to achieve an initial VM placement that minimizes its use of the data center network's bi-section bandwidth. When VMs' networking requirements change, the customer can then use v-Bundle to trade the networking resources allocated to her application. v-Bundle maintains information about network resources with any-cast tree-based methods implemented as extensions of the Pastry pub-sub core. Experimental evaluations show that the approach can scale well to thousands of hosts and VMs, and that v-Bundle can provide customers with better bandwidth utilization and improved application quality of service through borrowing extra bandwidth when needed, at no additional cost in terms of the total resources allocated to the customer.},
	author = {Hu, Liting and Ryu, Kyung Dong and {Da Silva}, Dilma and Schwan, Karsten},
	doi = {10.1109/ICDCS.2012.61},
	isbn = {978-1-4577-0295-2},
	issn = {1063-6927},
	journal = {Proceedings - International Conference on Distributed Computing Systems},
	keywords = {Bisection bandwidth,Cloud computing,Pastry overlay,V-Bundle,Virtualization},
	pages = {406--415},
	title = {{v-Bundle: Flexible group resource offerings in clouds}},
	year = {2012}
}
@article{Jiang2012,
	abstract = {Today's data centers need efficient traffic management to improve resource utilization in their networks. In this work, we study a joint tenant (e.g., server or virtual machine) placement and routing problem to minimize traffic costs. These two complementary degrees of freedom-placement and routing-are mutually-dependent, however, are often optimized separately in today's data centers. Leveraging and expanding the technique of Markov approximation, we propose an efficient online algorithm in a dynamic environment under changing traffic loads. The algorithm requires a very small number of virtual machine migrations and is easy to implement in practice. Performance evaluation that employs the real data center traffic traces under a spectrum of elephant and mice flows, demonstrates a consistent and significant improvement over the benchmark achieved by common heuristics.},
	author = {Jiang, Joe Wenjie and Lan, Tian and Ha, Sangtae and Chen, Minghua and Chiang, Mung},
	doi = {10.1109/INFCOM.2012.6195719},
	isbn = {9781467307758},
	issn = {0743166X},
	journal = {Proceedings - IEEE INFOCOM},
	pages = {2876--2880},
	pmid = {7429077977903227674},
	title = {{Joint VM placement and routing for data center traffic engineering}},
	year = {2012}
}
@article{Konstanteli2012,
	abstract = {This paper presents an admission control test for deciding whether or not it is worth to admit a set of services into a Cloud, and in case of acceptance, obtain the optimum allocation for each of the components that comprise the services. In the proposed model, the focus is on hosting elastic services the resource requirements of which may dynamically grow and shrink, depending on the dynamically varying number of users and patterns of requests. In finding the optimum allocation, the presented admission control test uses an optimization model, which incorporates business rules in terms of trust, eco-efficiency and cost, and also takes into account affinity rules the components that comprise the service may have. The problem is modeled on the General Algebraic Modeling System (GAMS) and solved under realistic provider's settings that demonstrate the efficiency of the proposed method.},
	author = {Konstanteli, Kleopatra and Cucinotta, Tommaso and Psychas, Konstantinos and Varvarigou, Theodora},
	doi = {10.1109/CLOUD.2012.63},
	isbn = {9780769547558},
	issn = {2159-6182},
	journal = {Proceedings - 2012 IEEE 5th International Conference on Cloud Computing, CLOUD 2012},
	keywords = {admission control,cloud computing,elasticity,optimum allocation},
	pages = {41--48},
	title = {{Admission control for elastic cloud services}},
	year = {2012}
}
@article{Leite2015,
	abstract = {Nowadays, cloud users face three important problems: (a) choosing one or more appropriate cloud provider(s) to run their application(s), (b) selecting appropriate cloud resources, which implies having enough information about the available resources, including their characteristics and constraints, and (c) configuring the cloud resources. These problems are mostly due to the wide range of resources. These resources usually have distinct dependencies, and they are offered at various clouds' layers. In this complex scenario, the users often have to handle cloud resources and their dependencies manually. This is an error-prone and time-consuming activity, even for skilled cloud users and system administrators. In this context, this paper proposes a software product line engineering (SPLE) method and a tool to deal with these issues. Our SPL-based engineering method enables a declarative and goal-oriented strategy. Furthermore, it allows resource selection and configuration in inter-cloud environments. In our proposal, the cloud users specify their applications and requirements, and our tool automatically selects and configures a suitable computing environment, taking into account temporal and functional dependencies. Experimental results on Amazon EC2 and Google Compute Engine (GCE) show that our approach enables unskilled users to have access to advanced inter-cloud computing configurations, without being concerned with the characteristics of each cloud.},
	author = {Leite, Alessandro Ferreira and Alves, Vander and Rodrigues, Genaina Nunes and Tadonki, Claude and Eisenbeis, Christinechristine and {De Melo}, Alba Cristina Magalhaes Alves},
	doi = {10.1109/CLOUD.2015.101},
	isbn = {9781467372879},
	journal = {Proceedings - 2015 IEEE 8th International Conference on Cloud Computing, CLOUD 2015},
	number = {c},
	pages = {726--733},
	title = {{Automating Resource Selection and Configuration in Inter-clouds through a Software Product Line Method}},
	year = {2015}
}
@article{Li2015,
	abstract = {This issue's "Cloud Tidbit" focuses on container technology and how it's emerging as an important part of the cloud computing infrastructure. It looks at Docker, an open source project that automates the faster deployment of Linux applications, and Kubernetes, an open source cluster manager for Docker containers.},
	author = {Li, Li and Tang, Tony and Chou, Wu},
	doi = {10.1109/CLOUD.2015.91},
	isbn = {9781467372879},
	issn = {2325-6095},
	journal = {Proceedings - 2015 IEEE 8th International Conference on Cloud Computing, CLOUD 2015},
	keywords = {Cloud,Container,Docker,REST API,Resource Management,Resource-Oriented Network,Resource-as-a-Service,Role-Based Access Control},
	pages = {645--652},
	title = {{A REST Service Framework for Fine-Grained Resource Management in Container-Based Cloud}},
	year = {2015}
}
@article{Liu2012,
	abstract = {Realizing Infrastructure-as-a-Service (IaaS) cloud re- quires a control platform to orchestrate cloud re- source provisioning, configuration, and decommission- ing across a distributed set of diverse physical resources. This orchestration is challenging due to the rapid growth of data centers, high failure rate of commodity hard- ware and the increasing sophistication of cloud services. This paper presents the design and implementation of T ROPIC , a highly available, transactional resource or- chestration platform for building IaaS cloud infrastruc- tures. T ROPIC 's orchestration procedures that manipu- late physical resources are transactional, automatically guaranteeing atomicity, consistency, isolation and dura- bility of cloud operations. Through extensive evaluation of our prototype implementation, we demonstrate that T ROPIC can meet production-scale cloud orchestration demands, while maintaining our design goals of safety, robustness, concurrency and high availability.},
	author = {Liu, Changbin and Mao, Yun and Chen, Xu and Fern{\'{a}}ndez, Mary F},
	journal = {USENIX Annual Technical Conference},
	number = {April},
	pages = {183--190},
	title = {{TROPIC : Transactional Resource Orchestration Platform In the Cloud}},
	year = {2012}
}
@article{Metwally2015,
	abstract = {Current data center designs suffer from poor resource utilization. Several research works have addressed the data center resource allocation problem, and recent proposals have focused on network resource utilization as a bottleneck problem in data centers. However, little attention has been paid to manage the convergence of networking and other infrastructure resources. In this paper, we present a solution for improving data center's resource utilization. We introduce a unified cloud resource representation model and build a general resources repository using that model. We define a combined controller to manipulate infrastructure resources collected in the repository. A joint optimization model that performs the resource allocation as the main controller operation is also presented. This model represents the integration of semantic similarity and closeness centrality concepts and is formulated on a two-phase Mixed Integer Linear Programming (MILP-2P-IaaS): (i) mapping of hosting resources, and (ii) connectivity composition. Simulation results show that the (MILP-2P-IaaS) resource allocation approach improves data center's resource utilization and outperforms other benchmarks in terms of resource utilization and acceptance ratio.},
	author = {Metwally, Khaled and Jarray, Abdallah and Karmouch, Ahmed},
	doi = {10.1109/CLOUD.2015.152},
	isbn = {9781467372879},
	journal = {Proceedings - 2015 IEEE 8th International Conference on Cloud Computing, CLOUD 2015},
	keywords = {Closeness Centrality,Cloud IaaS,MILP,Network Virtualization,Resource Allocation,Resource Management,Semantic Similarity},
	pages = {1058--1062},
	title = {{MILP-Based Approach for Efficient Cloud IaaS Resource Allocation}},
	year = {2015}
}
@article{Nath2013,
	abstract = {Consolidation of multiple workloads, encapsulated in virtual machines (VMs), can significantly improve efficiency in cloud infrastructures. But consolidation also introduces contention in shared resources such as the memory hierarchy, leading to degraded VM performance. To avoid such degradation, the current practice is to not pack VMs tightly and leave a large fraction of server resource unused. This is wasteful. We present a system that consolidates VMs such that performance degradation is within a tunable bound while minimizing unused resources. The problem of selecting the most suitable VM combinations is NP-Complete and our system employs a practical method that performs provably close to the optimal. In some scenarios resource efficiency may trump performance and for this case our system implements a technique that maximizes performance while not leaving any resource unused. Experimental results show that the proposed system realizes over 30{\%} savings in energy costs and up to 52{\%} reduction in performance degradation compared to consolidation algorithms that do not consider degradation.},
	annote = {NULL},
	author = {Nath, Alan Roytman and Aman Kansal and Sriram Govindan and Jie Liu and Suman},
	isbn = {978-1-931971-02-7},
	journal = {10th International Conference on Autonomic Computing, ICAC'13, San Jose, CA, USA, June 26-28, 2013},
	pages = {83--94},
	title = {{PACMan: Performance Aware Virtual Machine Consolidation}},
	url = {https://www.usenix.org/conference/icac13/technical-sessions/presentation/roytman},
	year = {2013}
}
@article{NguyenTrungHieu2014,
	abstract = {Abstract—Virtual machine (VM) placement is the process of selecting the most suitable server in large cloud data centers to de- ploy newly-created VMs. Several approaches have been proposed to find a solution to this problem. However, most of the existing solutions only consider a limited number of resource types, thus resulting in unbalanced load or in the unnecessary activation of physical servers. In this article, we propose an algorithm, called Max-BRU, that maximizes the resource utilization and balances the usage of resources across multiple dimensions. Our algorithm is based on multiple resource-constraint metrics that help to find the most suitable server for deploying VMs in large cloud data centers. The proposed Max-BRU algorithm is evaluated by simulations based on synthetic datasets. Experimental results show two major improvements over the existing approaches for VM placement. First, Max-BRU increases the resource utilization by minimizing the amount of physical servers used. Second, Max-BRU effectively balances the utilization of multiple types of resources.},
	author = {{Nguyen Trung Hieu} and {Di Francesco}, Mario and Yla-Jaaski, Antti},
	doi = {10.1109/CLOUD.2014.70},
	isbn = {978-1-4799-5063-8},
	issn = {21596182},
	journal = {2014 IEEE 7th International Conference on Cloud Computing},
	keywords = {-multiple resources,cloud computing,data centers,lization,load balancing,resource uti-,virtual machine},
	pages = {474--481},
	title = {{A virtual machine placement algorithm for balanced resource utilization in cloud data centers}},
	url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6973776},
	year = {2014}
}
@article{Ruiz-Alvarez2015,
	abstract = {—Given the variety of resources available in public clouds and locally (hybrid clouds), it can be very difficult to determine the best number and type of resources to allocate (and where) for a given activity. In order to solve this problem we first define the requested computation in terms of an Integer Linear Programming (ILP) problem and then use an efficient ILP solver to make a provisioning decision in a few milliseconds. Our approach is based on the two most important metrics for the user: cost and job execution time. Thus, based on the user's preferences we can favor solutions that optimize speed or cost or a certain combination of both (e.g. cheapest solution that meets a certain deadline). We evaluate our approach with two classes of cloud applications: MapReduce applications, and Monte Carlo simulations. A significant advantage in our approach is that our solution has been proved optimal by the ILP solver; the set of the scheduling decisions based on our model are plotted on a time vs. cost graph that forms a Pareto efficient frontier. This way, we can avoid the pitfalls of a na{\"{i}}ve strategy that can lead to a great increase in cost (91{\%}) or job running time (21{\%}) compared to optimal.},
	author = {Ruiz-Alvarez, Arkaitz and Kim, In Kee and Humphrey, Marty},
	doi = {10.1109/CLOUD.2015.94},
	isbn = {978-1-4673-7287-9},
	journal = {2015 IEEE 8th International Conference on Cloud Computing},
	keywords = {-cloud computing,ilp,resource provisioning},
	pages = {669--677},
	title = {{Toward Optimal Resource Provisioning for Cloud MapReduce and Hybrid Cloud Applications}},
	url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=7214104},
	year = {2015}
}
@article{Schwarzkopf2013,
	abstract = {Increasing scale and the need for rapid response to changing requirements are hard to meet with current monolithic cluster scheduler architectures. This restricts the rate at which new features can be deployed, decreases efﬁciency and utilization, and will eventually limit cluster growth. We present a novel approach to address these needs using parallelism, shared state, and lock-free optimistic concurrency control. We compare this approach to existing cluster scheduler designs, evaluate how much interference between schedulers occurs and how much it matters in practice, present some techniques to alleviate it, and ﬁnally discuss a use case highlighting the advantages of our approach – all driven by real-life Google production workloads.},
	author = {Schwarzkopf, Malte and Konwinski, Andy},
	doi = {10.1145/2465351.2465386},
	isbn = {9781450319942},
	issn = {{\textless}null{\textgreater}},
	journal = {EuroSys '13 Proceedings of the 8th ACM European Conference on Computer Systems},
	keywords = {cluster scheduling,optimistic concurrency con-},
	pages = {351--364},
	title = {{Omega: flexible, scalable schedulers for large compute clusters}},
	url = {http://dl.acm.org/citation.cfm?id=2465386},
	year = {2013}
}
@article{Shi2013,
	abstract = {We study the problem of optimising the provision- ing of collections of virtual machines (VMs) having different placement constraints (e.g., security and anti-collocation) and characteristics (e.g., memory and disk capacity), given a set of physical machines (PMs) with known specifications, in order to achieve the objective of maximising an IaaS cloud provider's revenue. We propose two approaches. The first is based on the formulation of the problem as an integer linear programming (ILP) problem, the solution to which provides an optimal VM placement. The second approach is a heuristic based on clas- sifying the requests into different categories and satisfying the constraints in a particular order using a first fit decreasing (FFD) algorithm for multi-dimensional vector bin packing problem. Given a model of VM placement constraints, offered resources and requests with multiple VM types, both approaches devise a placement plan in a way that maximizes revenue, having due regard both to customer requirements and PM capacities. We evaluate the relative performance of the solutions by means of numerical experiments. The results suggest the optimal solution is not practical for medium to large problems, but it is encouraging that the placement plans of the heuristic are close to those of the optimal solution for smaller problem sizes.We use the heuristic to generate results for large scale placement problems; experiments suggest that it is practical in terms of its runtime efficiency and can provide an effective means of online VM-to-PM mapping.},
	annote = {NULL},
	author = {Shi, Lei and Butler, Bernard},
	isbn = {9783901882500},
	journal = {IFIP/IEEE International Symposium on Integrated Network Management (IM 2013)},
	pages = {499--505},
	title = {{Provisioning of requests for virtual machine sets with placement constraints in IaaS clouds}},
	url = {http://ieeexplore.ieee.org/xpls/abs{\_}all.jsp?arnumber=6573024},
	year = {2013}
}
@article{Viswanathan2012,
	abstract = {Cloud computing has emerged as an exciting hosting paradigm to drive up server utilization and reduce data center operational costs. Even though clouds present a single unified homogeneous resource pool view to end users, the underlying server landscape may differ in terms of functionality and reconfiguration capabilities (e.g., support for shared processors, live migration). In a private cloud setting where information on the resources as well as workloads are available, the placement of applications on clouds can leverage it to achieve better consolidation with performance guarantees. In this work, we present the design and implementation of CloudMap, a provisioning system for private clouds. Given an application's resource usage patterns, we match it with a server cluster with the appropriate level of reconfiguration capability. In this cluster, we place the application on a server that has existing workloads with complementary resource usage profile. CloudMap is implemented using a hybrid architecture with a global server cluster selection module and local cluster-specific server selection modules. Using production traces from live data centers, we demonstrate the effectiveness of CloudMap over existing placement methodologies.},
	author = {Viswanathan, Balaji and Verma, Akshat and Dutta, Sourav},
	doi = {10.1109/NOMS.2012.6211877},
	isbn = {9781467302685},
	issn = {1542-1201},
	journal = {Proceedings of the 2012 IEEE Network Operations and Management Symposium, NOMS 2012},
	pages = {9--16},
	title = {{CloudMap: Workload-aware placement in private heterogeneous clouds}},
	year = {2012}
}
@article{Wuhib2012a,
	abstract = {We address the problem of dynamic resource management for a large-scale cloud environment. Our contribution includes outlining a distributed middleware architecture and presenting one of its key elements: a gossip protocol that (1) ensures fair resource allocation among sites/applications, (2) dynamically adapts the allocation to load changes and (3) scales both in the number of physical machines and sites/applications. We formalize the resource allocation problem as that of dynamically maximizing the cloud utility under CPU and memory constraints. We first present a protocol that computes an optimal solution without considering memory constraints and prove correctness and convergence properties. Then, we extend that protocol to provide an efficient heuristic solution for the complete problem, which includes minimizing the cost for adapting an allocation. The protocol continuously executes on dynamic, local input and does not require global synchronization, as other proposed gossip protocols do. We evaluate the heuristic protocol through simulation and find its performance to be well-aligned with our design goals.},
	author = {Wuhib, F and Stadler, R and Spreitzer, M},
	doi = {10.1109/TNSM.2012.031512.110176},
	issn = {1932-4537},
	journal = {Network and Service Management, IEEE Transactions on},
	keywords = {cloud computing;protocols;resource allocation;CPU},
	number = {2},
	pages = {213--225},
	title = {{A Gossip Protocol for Dynamic Resource Management in Large Cloud Environments}},
	volume = {9},
	year = {2012}
}
@article{Xi2015,
	abstract = {—Clouds have become appealing platforms for not only general-purpose applications, but also real-time ones. How-ever, current clouds cannot provide real-time performance to virtual machines (VMs). We observe the demand and the ad-vantage of co-hosting real-time (RT) VMs with non-real-time (regular) VMs in a same cloud. RT VMs can benefit from the easily deployed, elastic resource provisioning provided by the cloud, while regular VMs effectively utilize remaining resources without affecting the performance of RT VMs through proper resource management at both the cloud and the hypervisor levels. This paper presents RT-OpenStack, a cloud CPU resource management system for co-hosting real-time and regular VMs. RT-OpenStack entails three main contributions: (1) integration of a real-time hypervisor (RT-Xen) and a cloud management system (OpenStack) through a real-time resource interface; (2) a real-time VM scheduler to allow regular VMs to share hosts with RT VMs without interfering the real-time performance of RT VMs; and (3) a VM-to-host mapping strategy that provisions real-time performance to RT VMs while allowing effective resource sharing with regular VMs. Experimental results demonstrate that RT-OpenStack can effectively improve the real-time performance of RT VMs while allowing regular VMs to fully utilize the remaining CPU resources.},
	author = {Xi, Sisu and Li, Chong and Lu, Chenyang and Gill, Christopher D. and Xu, Meng and Phan, Linh T X and Lee, Insup and Sokolsky, Oleg},
	doi = {10.1109/CLOUD.2015.33},
	isbn = {9781467372879},
	journal = {Proceedings - 2015 IEEE 8th International Conference on Cloud Computing, CLOUD 2015},
	keywords = {Openstack,Rt-xen,Scheduling},
	pages = {179--186},
	title = {{RT-Open Stack: CPU Resource Management for Real-Time Cloud Computing}},
	year = {2015}
}
@article{Zhang2016,
	author = {Zhang, Weizhe and Han, Shuo and He, Hui and Chen, Huixiang},
	doi = {10.1016/j.future.2016.03.009},
	isbn = {9781467302692},
	issn = {0167739X},
	journal = {Future Generation Computer Systems},
	number = {Vm},
	pages = {196--203},
	title = {{Network-aware virtual machine migration in an overcommitted cloud}},
	url = {http://linkinghub.elsevier.com/retrieve/pii/S0167739X1630053X},
	year = {2016}
}
@article{Zou2014,
	abstract = {Our measurements on production datacenter traffic together with recently-reported results (Kandula et al.) [1] suggest that datacenter networks suffer from long-lived congestion caused by core network oversubscription and unbalanced workload placement. In contrast to traditional traffic engineering approaches that optimize flow routing, in this paper, we explore the opportunity to address the continuous congestion via optimizing VM placement in virtualized datacenters. To this end, we present VirtualKnotter to reduce congestion with controllable VM migration traffic as well as low migration time, which includes an online VM placement algorithm and an efficient VM migration scheduling algorithm. Our evaluation with both real and synthetic traffic patterns shows that VirtualKnotter performs close to the baseline algorithm in terms of link unitization, with only 5-10{\%} migration traffic of the baseline algorithm. Furthermore, VirtualKnotter decreases link congestion time by 53{\%} for the production datacenter traffic. {\textcopyright} 2014 Elsevier B.V. All rights reserved.},
	author = {Zou, Shihong and Wen, Xitao and Chen, Kai and Huang, Shan and Chen, Yan and Liu, Yongqiang and Xia, Yong and Hu, Chengchen},
	doi = {10.1016/j.comnet.2014.03.025},
	isbn = {978-1-4577-0295-2},
	issn = {13891286},
	journal = {Computer Networks},
	keywords = {Datacenter,Link congestion,VM migration,VM placement},
	pages = {141--153},
	publisher = {Elsevier B.V.},
	title = {{VirtualKnotter: Online virtual machine shuffling for congestion resolving in virtualized datacenter}},
	url = {http://dx.doi.org/10.1016/j.comnet.2014.03.025},
	volume = {67},
	year = {2014}
}
@misc{Libcloud,
	title = {{Apache Libcloud}},
	url = {https://github.com/pkgcloud/pkgcloud},
	urldate = {23-03-2017},
	year = {2017}
}
@misc{pkgcloud,
	title = {pkgcloud},
	url = {https://libcloud.apache.org/},
	urldate = {23-03-2017},
	year = {2017}
}
@article{Beloglazov2014,
	abstract = {Dynamic consolidation of virtual machines (VMs) is an efficient approach for improving the utilization of physical resources and reducing energy consumption in cloud data centers. Despite the large volume of research published on this topic, there are very few open-source software systems implementing dynamic VM consolidation. In this paper, we propose an architecture and open-source implementation of OpenStack Neat, a framework for dynamic VMconsolidation in OpenStack clouds. OpenStack Neat can be configured to use custom VM consolidation algorithms and transparently integrates with existing OpenStack deploy- ments without the necessity of modifying their configuration. In addition, to foster and encourage further research efforts in the area of dynamic VM consolidation, we propose a benchmark suite for evaluating and comparing dynamic VM consolidation algorithms. The proposed benchmark suite comprises Open- Stack Neat as the base software framework, a set of real-world workload traces, performance metrics and evaluation methodology. As an application of the proposed benchmark suite, we conduct an experimental evaluation of OpenStack Neat and several dynamic VM consolidation algorithms on a five-node testbed, which shows significant benefits of dynamic VM consolidation resulting in up to 33{\%} energy savings.},
	archivePrefix = {arXiv},
	arxivId = {arXiv:1302.5679v1},
	author = {Beloglazov, Anton and Buyya, Rajkumar},
	doi = {10.1002/cpe},
	eprint = {arXiv:1302.5679v1},
	isbn = {2007015102},
	issn = {15320626},
	journal = {Concurrency Computation Practice and Experience},
	keywords = {1.,OpenStack,cloud computing,dynamic VMconsolidation,framework,virtualization},
	number = {6},
	pages = {1310--1333},
	pmid = {23335858},
	title = {{OpenStack Neat: a framework for dynamic and energy-efficient consolidation of virtual machines in OpenStack clouds}},
	volume = {27},
	year = {2014}
}
@article{Benet2017,
	abstract = {OpenStack has been widely acknowledged to be one of the most important open source cloud platforms. In order to perform experimentally driven research in the area of cloud and cloud networking, there is however a big gap, because most researchers do not have access to a large cloud deployment and cannot change networking or compute infrastructure in order to test their algorithms and protocols on a large-scale.We developed OpenStackEmu, which is to the best of our knowledge the first attempt that combines OpenStack infrastructure with a Software Defined Networking (SDN) based controller such as OpenDay- light and a large-scale network emulator CORE (Common Open Research Emulator). The OpenStack compute and control nodes are connected to the CORE emulation server using TUN/TAP interfaces that inject the control (e.g. for VM migration) and data (VM-to-VM traffic) packets into a customizable network topology that is emulated using configurable Open vSwitches using CORE emulator. Experimenters can define e.g. fat-tree or distributed data center topologies and study the behavior of real VMs and services in those VMs under different background loads and SDN routing policies. We integrated the data center traffic generator DCT2Gen that allows to generate realistic background traffic based on traces from real data centers. Experimenters can study the performance impact of different VM migration strategies or different routing and load balancing schemes on real VM and application performance using different emulated topologies. We believe that OpenStackEmu is an important tool for both the SDN and OpenStack community in order to evaluate the performance of novel algorithms and protocols in the area of cloud networking.},
	author = {Benet, Cristian Hernandez and Nasim, Robayet and Noghani, Kyoomars Alizadeh and Kassler, Andreas},
	journal = {The 14th Annual IEEE Consumer Communications {\&} Networking Conference},
	number = {January},
	title = {{OpenStackEmu - A Cloud Testbed Combining Network Emulation with OpenStack and SDN}},
	year = {2017}
}
@article{Maenhaut2016,
	author = {Maenhaut, Pieter-jan and Moens, Hendrik and Volckaert, Bruno and Ongenae, Veerle and Turck, Filip De},
	isbn = {9781509002238},
	title = {{A Simulation Tool for Evaluating the Constraint-Based Allocation of Storage Resources for Multi-Tenant Cloud Applications}},
	year = {2016}
}
@misc{OpenStack2017c,
	author = {OpenStack},
	title = {{Filter Scheduler}},
	url = {https://docs.openstack.org/developer/nova/filter{\_}scheduler.html{\#}weights},
	urldate = {12-04-2017},
	year = {2017}
}
@misc{Labs,
	author = {Grafana Labs},
	title = {{Grafana}},
	urldate = {2017-05-11},
	url = {https://grafana.com/},
	year = {2017}
}
@misc{OpenStack2017d,
	author = {OpenStack},
	title = {{Gnocchi}},
	url = {https://wiki.openstack.org/wiki/Gnocchi},
	urldate = {11/05/2017},
	year = {2017}
}
@misc{Datadog,
	title = {{Datadog}},
	url = {https://www.datadoghq.com/},
	urldate = {11/05/2017},
	year = {2017}
}
@misc{Openstack2017e,
	author = {Openstack},
	title = {{Monasca}},
	url = {https://wiki.openstack.org/wiki/Monasca},
	urldate = {2017-05-11},
	year = {2017}
}
@misc{Tanaka2014,
	author = {Tanaka, Masayuki},
	title = {{C3.js}},
	url = {http://c3js.org/},
	urldate = {11/05/2017},
	year = {2014}
}
@misc{OpenStack2017f,
	author = {OpenStack},
	title = {{Heat Orchestration Template (HOT) specification}},
	url = {https://docs.openstack.org/developer/heat/template{\_}guide/hot{\_}spec.html{\#}hot-spec},
	urldate = {16/05/2017},
	year = {2017}
}
@misc{OpenStack2017g,
	author = {OpenStack},
	title = {{Heat}},
	url = {https://wiki.openstack.org/wiki/Heat},
	urldate = {16/05/2017},
	year = {2017}
}
@misc{OpenStack2017h,
	author = {OpenStack},
	title = {{Telemetry}},
	url = {https://wiki.openstack.org/wiki/Telemetry},
	urldate = {2017-05-16},
	year = {2017}
}
@inproceedings{Maenhaut2017,
	abstract = {With cloud computing, efficient resource management is of great importance, as it has a direct impact on the scalability of the cloud application, and can result in significant energy and cost reductions. In recent years, a lot of research has been done regarding the management of cloud resources, resulting in multiple novel resource allocation strategies. Validation of these strategies however is often only based on simulations, as large experiments using real cloud infrastructure are both expensive and time-consuming. In this demo we present RPiaaS, a low-cost and energy-efficient cloud testbed built using Raspberry Pi's. The testbed provides an easy-to-use environment for the initial evaluation of novel cloud resource management strategies, and is designed to facilitate the step from simulations towards experimental evaluations on larger cloud testbeds.},
	address = {Atlanta, GA, USA},
	author = {Maenhaut, Pieter-jan and Volckaert, Bruno and Ongenae, Veerle and Turck, Filip De},
	booktitle = {IEEE INFOCOM},
	title = {{Demo Abstract : RPiaaS : A Raspberry Pi Testbed for Validation of Cloud Resource Management Strategies}},
	year = {2017}
}
@misc{OpenStack2017i,
	author = {OpenStack},
	title = {{Create and manage stack}},
	url = {https://docs.openstack.org/user-guide/cli-create-and-manage-stacks.html},
	urldate = {16/05/2017},
	year = {2017}
}
@misc{OpenStack2017j,
	author = {OpenStack},
	title = {{Firstapp - Orchestration}},
	url = {https://developer.openstack.org/firstapp-libcloud/orchestration.html},
	urldate = {16/05/2017},
	year = {2017}
}
@misc{Kumar2017,
	author = {Kumar, Suresh},
	title = {{Devstack for Beginners}},
	url = {https://sureshkvl.gitbooks.io/devstack-for-beginners/content/},
	urldate = {16/05/2017},
	year = {2017}
}
@misc{OpenStack2017k,
	author = {OpenStack},
	title = {{FaaFo - LibCloud}},
	url = {https://developer.openstack.org/firstapp-libcloud/getting{\_}started.html},
	urldate = {17/05/2017},
	year = {2017}
}
@unpublished{Simoens,
	author = {Pieter Simoens},
	title = {{Systeemontwerp}},
    note = {Universiteit Gent},
	year = {2017},
	location = {Universiteit Gent},
}
